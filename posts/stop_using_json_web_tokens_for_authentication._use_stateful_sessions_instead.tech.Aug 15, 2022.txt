<div class="">
<h1 id="7c3f" class="pw-post-title xg fk xh bv he xi xj xk xl xm xn xo xp xq xr xs xt xu xv xw xx xy xz ya yb yc by" data-selectable-paragraph="">Stop Using JSON Web Tokens For Authentication. Use Stateful Sessions Instead</h1>
</div>
<div class="">
<h2 id="9965" class="pw-subtitle-paragraph yd fk xh bv b ye yf yg yh yi yj yk yl tc td ym th ti yn tm tn yo ho" data-selectable-paragraph="">Yup, you&rsquo;re probably using them incorrectly</h2>
</div>
<figure class="yq yr ys yt vy yu rx ry paragraph-image">
<div class="yv yw cu yx ae yy" tabindex="0" role="button">
<div class="rx ry yp"><img class="ae yz za" role="presentation" src="https://miro.medium.com/max/1050/0*8YGhfgBlGErP0_Qp" alt="" width="700" height="467" loading="lazy"></div>
</div>
<figcaption class="zb jt vo rx ry zc zd bv b bw bx ho" data-selectable-paragraph="">Photo by&nbsp;<a class="ay ot" href="https://unsplash.com/@imattsmart?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">iMattSmart</a>&nbsp;on&nbsp;<a class="ay ot" href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Unsplash</a></figcaption>
</figure>
<p id="4191" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">I'm tired of seeing the same tutorials pop up every couple of weeks.</p>
<ul class="">
<li id="6a86" class="zz aba xh tr b zg zh zj zk zm abb zq abc zu abd zy abe abf abg ea by" data-selectable-paragraph="">"JWTokens are the recommended auth method because of scalability."</li>
<li id="db1e" class="zz aba xh tr b zg abh zj abi zm abj zq abk zu abl zy abe abf abg ea by" data-selectable-paragraph="">"JWTokens are easier to use."</li>
<li id="960a" class="zz aba xh tr b zg abh zj abi zm abj zq abk zu abl zy abe abf abg ea by" data-selectable-paragraph="">"JWTokens are stateless, so you don't use memory on the server."</li>
</ul>
<p id="84e1" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Let me tell you something. These people probably don't know any better.</p>
<p id="808e" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">I am sure their intentions are good, but they share an un-secure way of authenticating and authorizing users, at least for web applications.</p>
<p id="f7ac" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">However, please don't feel bad; I used JWT (incorrectly) when starting I was starting out because I didn't know any better.</p>
<p id="7b13" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Let's get started!</p>
<blockquote class="abm abn abo">
<p id="c3c8" class="ze zf abp tr b zg zh yh zi zj zk yk zl abq zn zo zp abr zr zs zt abs zv zw zx zy qq by" data-selectable-paragraph="">Disclaimer: I am not advocating that you should stop using JWT or similar mechanisms altogether. However, I&rsquo;ve seen multiple tutorials implement them in terrible ways for the sake of simplicity.</p>
<p id="1d90" class="ze zf abp tr b zg zh yh zi zj zk yk zl abq zn zo zp abr zr zs zt abs zv zw zx zy qq by" data-selectable-paragraph="">You can definitely use JWT tokens securely, however, you should probably not implement them from scratch since it can become complicated to secure them extensively without going down a rabbit hole.</p>
</blockquote>
<figure class="yq yr ys yt vy yu rx ry paragraph-image">
<div class="yv yw cu yx ae yy" tabindex="0" role="button">
<div class="rx ry abt"><img class="ae yz za" role="presentation" src="https://miro.medium.com/max/1050/0*anFcN4T0DwYZtcf4" alt="" width="700" height="467" loading="lazy"></div>
</div>
<figcaption class="zb jt vo rx ry zc zd bv b bw bx ho" data-selectable-paragraph="">Photo by&nbsp;<a class="ay ot" href="https://unsplash.com/@bendavisual?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Benjamin Davies</a>&nbsp;on&nbsp;<a class="ay ot" href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Unsplash</a></figcaption>
</figure>
<h1 id="ece9" class="abu abv xh bv ky abw abx aby sw abz aca acb tb tc acc td tg th acd ti tl tm ace tn tq acf by" data-selectable-paragraph="">The Way JWT is usually implemented (in tutorials)</h1>
<p id="c9bb" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">With that out of the way, let's go through the flow to authenticate users with JWT.</p>
<ul class="">
<li id="0aa6" class="zz aba xh tr b zg zh zj zk zm abb zq abc zu abd zy abe abf abg ea by" data-selectable-paragraph=""><strong class="tr he">The user enters their username and password &mdash;&nbsp;</strong>When the user clicks the sign-in button, a request is sent to the server to verify the user's credential with the database.</li>
<li id="8304" class="zz aba xh tr b zg abh zj abi zm abj zq abk zu abl zy abe abf abg ea by" data-selectable-paragraph=""><strong class="tr he">The server successfully authenticates the user</strong>&nbsp;&mdash; The server now creates and signs a JWT using a secret password and returns it in the response.</li>
</ul>
<p id="61dd" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Tutorials usually set the expiration to about one week to 30 days.</p>
<ul class="">
<li id="a184" class="zz aba xh tr b zg zh zj zk zm abb zq abc zu abd zy abe abf abg ea by" data-selectable-paragraph=""><strong class="tr he">The Client Receives the JWT in the response&nbsp;</strong>&mdash; The developer (in a client like chrome) receives it, applies some logic, and then stores it, usually in Local Storage.</li>
<li id="ac39" class="zz aba xh tr b zg abh zj abi zm abj zq abk zu abl zy abe abf abg ea by" data-selectable-paragraph=""><strong class="tr he">The Client uses info stored in the Token to render conditionally&nbsp;</strong>&mdash; Usually, tutorials use fields like a user's email, username, and boolean fields like&nbsp;<code class="en acl acm acn aco b">isAdmin</code><strong class="tr he">.</strong></li>
<li id="e900" class="zz aba xh tr b zg abh zj abi zm abj zq abk zu abl zy abe abf abg ea by" data-selectable-paragraph=""><strong class="tr he">The Client Adds the Token as a header for every request&nbsp;</strong>&mdash; If the Token exists in Local Storage, the user's session is active.</li>
</ul>
<p id="3d84" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">The server can now check the user's identity by decrypting the signed Token on every request.</p>
<p id="ac81" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">The Token will be valid until it expires.</p>
<figure class="yq yr ys yt vy yu rx ry paragraph-image">
<div class="yv yw cu yx ae yy" tabindex="0" role="button">
<div class="rx ry acp"><img class="ae yz za" role="presentation" src="https://miro.medium.com/max/1050/0*jGBZIBQ4H3Zo3TIv" alt="" width="700" height="468" loading="lazy"></div>
</div>
<figcaption class="zb jt vo rx ry zc zd bv b bw bx ho" data-selectable-paragraph="">Photo by&nbsp;<a class="ay ot" href="https://unsplash.com/@randylaybourne?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Randy Laybourne</a>&nbsp;on&nbsp;<a class="ay ot" href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Unsplash</a></figcaption>
</figure>
<h1 id="803d" class="abu abv xh bv ky abw abx aby sw abz aca acb tb tc acc td tg th acd ti tl tm ace tn tq acf by" data-selectable-paragraph="">Everything that's Wrong With Using JWT this way.</h1>
<p id="6fa6" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">If your developer senses aren't tingling yet, don't worry, I highlighted some of the red flags of the approach, and we will break them down even further below.</p>
<h2 id="8565" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">The response contains the JWT.</h2>
<p id="c60c" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">The first red flag we encounter is returning the Token in the response. Because of this, the front-end code has free access to read and store the Token.</p>
<p id="02ab" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Access to the Token enables cross-site scripting attacks to steal the user's identity and send requests on their behalf. Since we don't have session information about the users, there's probably no way to know.</p>
<h2 id="1744" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">JWT's are always valid until they expire</h2>
<p id="df11" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">Since JWT auth is stateless, there is no way to revoke the user's session once the server signs a valid token.</p>
<p id="ee6a" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Consequently, using long expiration windows + unsafe Storage is the perfect combination for a hacker to inflict severe damage to our users.</p>
<p id="e975" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">The only way to revoke them is to change the signing secret, and this would essentially log out your whole user base since all tokens would be rendered invalid.</p>
<h2 id="24dd" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">Local Storage is not safe long term.</h2>
<p id="2dce" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">Storing content in Local Storage for prolonged periods is not safe since anyone can access it in the browser.</p>
<p id="4c1e" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Cross-Site Scripting can retrieve tokens from the local Storage as it isn't encrypted or protected.</p>
<h2 id="228f" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">Information may be out of sync.</h2>
<p id="bfe1" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">This issue is not as grave as the others, but I wanted to mention it.</p>
<p id="5c74" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Storing fields like&nbsp;<code class="en acl acm acn aco b">isAdmin</code>, the user's address, etc., might not be inherently unsafe, but here's the issue.</p>
<p id="34d0" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Since tokens are stateless, there is no way to update them when info changes. So a user's username, email, or permissions could be out of sync with the actual values in the database.</p>
<h2 id="8a23" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">Cross-Origin Requests are allowed.</h2>
<p id="4161" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">With JWT, anyone with the Token can send valid requests.</p>
<p id="2b39" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Malicious sites can send requests to your website from unsafe or fake domains that may look like your website, and the browser will allow it.</p>
<p id="ec36" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">You can minimize this risk by using CORS, but the tutorial probably didn't mention that.</p>
<figure class="yq yr ys yt vy yu rx ry paragraph-image">
<div class="yv yw cu yx ae yy" tabindex="0" role="button">
<div class="rx ry aea"><img class="ae yz za" role="presentation" src="https://miro.medium.com/max/1050/0*BI23oC39haPjwyNK" alt="" width="700" height="467" loading="lazy"></div>
</div>
<figcaption class="zb jt vo rx ry zc zd bv b bw bx ho" data-selectable-paragraph="">Photo by&nbsp;<a class="ay ot" href="https://unsplash.com/@jannerboy62?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Nick Fewings</a>&nbsp;on&nbsp;<a class="ay ot" href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Unsplash</a></figcaption>
</figure>
<h1 id="699d" class="abu abv xh bv ky abw abx aby sw abz aca acb tb tc acc td tg th acd ti tl tm ace tn tq acf by" data-selectable-paragraph="">When (and how) to use JWT correctly</h1>
<p id="4b1a" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">These tokens aren't safe for authenticating web apps, but that doesn't mean they are useless. On the contrary, several use cases work great for these tokens.</p>
<h2 id="dd2a" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph=""><strong class="be">Use JWT when:</strong></h2>
<ul class="">
<li id="a8d0" class="zz aba xh tr b zg acg zj ach zm aeb zq aec zu aed zy abe abf abg ea by" data-selectable-paragraph=""><mark class="ajm ajn pm">The expiration window is small. (2 hours)</mark></li>
<li id="e17b" class="zz aba xh tr b zg abh zj abi zm abj zq abk zu abl zy abe abf abg ea by" data-selectable-paragraph="">The request does not involve storing the Token in a browser</li>
<li id="ec5a" class="zz aba xh tr b zg abh zj abi zm abj zq abk zu abl zy abe abf abg ea by" data-selectable-paragraph="">The request does not require encryption.</li>
</ul>
<h2 id="2228" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">A real-life example use case</h2>
<p id="38e3" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">The perfect example is controlling access to resources like file downloads.</p>
<p id="ed05" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Let's say that your user bought a virtual product a month ago and wants to download it again.</p>
<p id="1b22" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Are you going to have an open link that anyone can use to download your virtual product?</p>
<p id="7af0" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">JWT tokens come in handy since you can create short-lived access tokens that verify the user's identity and temporarily grant access to the purchased content.</p>
<p id="6da6" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">The Token is not stored anywhere, and it expires very fast. Therefore, it allows you to process verifiable transactions with ease.</p>
<p id="2c9d" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">If you've ever integrated 3rd party sign-on with Google or other providers, that's an excellent example of when to use JWT.</p>
<figure class="yq yr ys yt vy yu rx ry paragraph-image">
<div class="yv yw cu yx ae yy" tabindex="0" role="button">
<div class="rx ry aea"><img class="ae yz za" role="presentation" src="https://miro.medium.com/max/1050/0*atWe4fXBfN4vBXWf" alt="" width="700" height="525" loading="lazy"></div>
</div>
<figcaption class="zb jt vo rx ry zc zd bv b bw bx ho" data-selectable-paragraph="">Photo by&nbsp;<a class="ay ot" href="https://unsplash.com/@franckinjapan?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Franck</a>&nbsp;on&nbsp;<a class="ay ot" href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Unsplash</a></figcaption>
</figure>
<h1 id="c60e" class="abu abv xh bv ky abw abx aby sw abz aca acb tb tc acc td tg th acd ti tl tm ace tn tq acf by" data-selectable-paragraph="">Server Side Sessions</h1>
<p id="d0e6" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">A stateful session means that the server stores the user's sessions in memory or the database.</p>
<p id="84c6" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Although this does come with some tradeoffs, it eliminates most of the issues and security concerns of the previous approach when appropriately implemented.</p>
<p id="b6f4" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">However, it does introduce a couple of other challenges. It depends on your project's requirements.</p>
<h2 id="2940" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">You can keep track of a user's session activity (more easily)</h2>
<p id="c966" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">With stateful sessions, you can store helpful info like the user's IP address, session duration, last request timestamp, and view how many active sessions each user has.</p>
<h2 id="83da" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">The server can revoke sessions on demand.</h2>
<p id="2257" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">Upon triggering a warning, (imagine the user has three active sessions from different countries), sessions can be revoked on demand to prevent stolen tokens from being used&mdash;no need to wait for expiration every 30 minutes.</p>
<h2 id="dda4" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">HTTP-Only Cookies are more secure**</h2>
<blockquote class="abm abn abo">
<p id="3cd0" class="ze zf abp tr b zg zh yh zi zj zk yk zl abq zn zo zp abr zr zs zt abs zv zw zx zy qq by" data-selectable-paragraph="">**No method is 100% safe against all attacks.</p>
</blockquote>
<p id="d529" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">You must store stateful session tokens (like a UUID string)&nbsp;<strong class="tr he">in HTTP-Only Cookies</strong>.</p>
<p id="ffb6" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">An HTTP-Only cookie means that the cookie is automatically attached to each Client's request, and no one can access the Token in the browser, not even you!</p>
<h2 id="9ae3" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">HTTP-Only Cookies prevent cross-site requests by default</h2>
<p id="575b" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">HTTP Only Cookies should have strict settings regarding cross-site requests. Cookies won't work if the request is sent from a 3rd party domain by default.</p>
<p id="d854" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">We'll dive deeper into this later.</p>
<h2 id="d651" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">Sessions aren't cryptographically expensive.</h2>
<p id="33dd" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">You don't have to validate signed JWT sessions since the Token can be mapped to the user id and stored in a memory-based database like Redis for lighting-fast access and read operations.</p>
<figure class="yq yr ys yt vy yu rx ry paragraph-image">
<div class="yv yw cu yx ae yy" tabindex="0" role="button">
<div class="rx ry aee"><img class="ae yz za" role="presentation" src="https://miro.medium.com/max/1050/0*eIRhFDIH2UeBGikV" alt="" width="700" height="394" loading="lazy"></div>
</div>
<figcaption class="zb jt vo rx ry zc zd bv b bw bx ho" data-selectable-paragraph="">Photo by&nbsp;<a class="ay ot" href="https://unsplash.com/@bruno_kelzer?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Bruno Kelzer</a>&nbsp;on&nbsp;<a class="ay ot" href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Unsplash</a></figcaption>
</figure>
<h1 id="f2dc" class="abu abv xh bv ky abw abx aby sw abz aca acb tb tc acc td tg th acd ti tl tm ace tn tq acf by" data-selectable-paragraph="">The Tradeoffs</h1>
<p id="db5a" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">Usually, stateless is a preferred approach since it allows services to run in great numbers without any dependencies (state)</p>
<p id="2a0b" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Using stateful sessions does introduce a potential new challenge for us.</p>
<h2 id="a4a6" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">CSRF Attacks</h2>
<p id="298d" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">Cross-Site Request Forgery attacks are something that we need to watch out for when using cookies.</p>
<p id="11b0" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">This type of attack was not possible when storing the tokens in local Storage. However, there are two main ways you can protect against this.</p>
<h2 id="f5d0" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">Cookie Settings</h2>
<p id="04b6" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">In a production environment, you should set&nbsp;<strong class="tr he">HTTP-only</strong>, and the&nbsp;<strong class="tr he">Secure</strong>&nbsp;flag to&nbsp;<strong class="tr he">true</strong>&nbsp;(the browser won't put the cookie if the request is not HTTPS)</p>
<p id="20b0" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">For CSRF attacks, the&nbsp;<strong class="tr he">Same-Site&nbsp;</strong>flag should be set to&nbsp;<strong class="tr he">"strict."</strong></p>
<p id="7bcf" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Setting this flag to strict ensures that only requests originating from the same domain as your server are allowed.</p>
<p id="0cc7" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">For example, if a 3rd party website tries to perform a request using your user's session in a CSRF attack, the auth cookie will not be set since the attacker's domain does not match yours.</p>
<h2 id="fba2" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">Anti CSRF Tokens</h2>
<p id="33c7" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">I won't detail this topic, but make sure that your API only performs changes using Post Requests.</p>
<p id="677f" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">GET requests should only retrieve data.</p>
<p id="b359" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">These types of attacks fool the user into clicking on a link, which then uses the user's active session to embed a request form to change user data without accessing the actual auth token.</p>
<p id="3aee" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Using an Anti-CSRF Token ensures the server can verify the POST request sent by the client originated from the actual website.</p>
<p id="52d9" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">The server checks if the token is received matches the one it initially sent to the client.</p>
<h2 id="99b6" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph=""><strong class="be">Scalability</strong></h2>
<p id="9a0c" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">JWT tutorials love talking about how their Todo List React App with 12 users needs to be scalable to serve millions of active users.</p>
<p id="eefd" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">While this is a valid issue and a fantastic future problem, it's not good to put scalability above security.</p>
<p id="2975" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Only address the immediate needs of your application, and scalability is probably not one of them. A single server can serve hundreds, if not thousands of users.</p>
<figure class="yq yr ys yt vy yu rx ry paragraph-image">
<div class="yv yw cu yx ae yy" tabindex="0" role="button">
<div class="rx ry aef"><img class="ae yz za" role="presentation" src="https://miro.medium.com/max/1050/0*8X9g56tgteV4n3-C" alt="" width="700" height="394" loading="lazy"></div>
</div>
<figcaption class="zb jt vo rx ry zc zd bv b bw bx ho" data-selectable-paragraph="">Photo by&nbsp;<a class="ay ot" href="https://unsplash.com/@marcojodoin?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Marc-Olivier Jodoin</a>&nbsp;on&nbsp;<a class="ay ot" href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Unsplash</a></figcaption>
</figure>
<h1 id="2b82" class="abu abv xh bv ky abw abx aby sw abz aca acb tb tc acc td tg th acd ti tl tm ace tn tq acf by" data-selectable-paragraph="">Providing Scalability</h1>
<p id="7bda" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">I can't close this article without mentioning that scalability can become an issue with server-side sessions.</p>
<p id="1de1" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">If scalability is an active concern for your application, you don't have to worry; we will fix it soon.</p>
<blockquote class="abm abn abo">
<p id="d506" class="ze zf abp tr b zg zh yh zi zj zk yk zl abq zn zo zp abr zr zs zt abs zv zw zx zy qq by" data-selectable-paragraph="">It&rsquo;s important to note that using a cluster will incur additional costs, but they should not be too high depending on the workload. Be sure to use the AWS calculator for Redis to get an estimate and decide if server-side sessions are a good idea for your project.</p>
</blockquote>
<h2 id="0e33" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">Making our Stateful Sessions "Stateless"</h2>
<p id="d8fa" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">An application is stateless if it does not need to store any state in the same instance it is running on.</p>
<p id="cd8e" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">If your database ran inside the same server instance as your application, it wouldn't be stateless.</p>
<p id="9832" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">However, if you run your database independently from your server instance, your server is stateless since its only purpose is to process business logic.</p>
<p id="3c84" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Storing data is the database's concern.</p>
<h2 id="24a4" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">Storing our Sessions in a Memory-Based Database</h2>
<p id="93f3" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">Your server should require session data for every authenticated request to your server. For this reason, we want to optimize Read and Write operations.</p>
<p id="341d" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Using our regular SQL or NoSQL database would be very taxing and could potentially induce high costs and slowdowns.</p>
<h2 id="5381" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">Using Redis</h2>
<p id="cd8a" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">Redis is an in-memory (key, value) pair database which allows for fast Read and Write access. However, I recommend you do your research as there are various alternatives.</p>
<p id="c5da" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">For example, AWS provides Redis clusters which ensure that your operation remains scalable automatically with autoscaling groups.</p>
<figure class="yq yr ys yt vy yu rx ry paragraph-image">
<div class="yv yw cu yx ae yy" tabindex="0" role="button">
<div class="rx ry aeg"><img class="ae yz za" role="presentation" src="https://miro.medium.com/max/1050/0*C2kk4eT0EleDQDL3" alt="" width="700" height="467" loading="lazy"></div>
</div>
<figcaption class="zb jt vo rx ry zc zd bv b bw bx ho" data-selectable-paragraph="">Photo by&nbsp;<a class="ay ot" href="https://unsplash.com/@solenfeyissa?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Solen Feyissa</a>&nbsp;on&nbsp;<a class="ay ot" href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Unsplash</a></figcaption>
</figure>
<h1 id="dbde" class="abu abv xh bv ky abw abx aby sw abz aca acb tb tc acc td tg th acd ti tl tm ace tn tq acf by" data-selectable-paragraph="">The Server Side Session Workflow</h1>
<p id="008d" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">Finally, let's go through the workflow of using Stateful Sessions, as we did not so long ago with JWT.</p>
<h2 id="5126" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">The user enters their username and password.</h2>
<p id="ee3c" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">When the user clicks the sign-in button, a request is sent to the server to verify the user's credential using the database.</p>
<h2 id="2f44" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">The server successfully authenticates the user.</h2>
<p id="7405" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">The server creates a token (UUID), maps it to the user's database ID, and stores it in Redis.</p>
<p id="b4ff" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">The server attaches the Cookie to the HTTP response sent to the browser.</p>
<h2 id="cf36" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">The Client Checks if the Token is valid.</h2>
<p id="da09" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">Simply having an HTTP-Only cookie in the header does not mean a session is active.</p>
<p id="2062" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">The browser sends a GET request to the server endpoint that handles user session data. Since the Cookie provides the server with this info, this request requires no parameters.</p>
<p id="54d6" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">The front-end can now store the session data in the application without keeping the actual Token.</p>
<h2 id="9cfb" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">The Client uses info stored in the Token to render conditionally</h2>
<p id="d41e" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">Usually, tutorials use fields like a user's email, username, etc. This time, the information is usually up to date since it is updated every time the Client refreshes the website.</p>
<h2 id="de72" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">The HTTP-Only Cookie is sent automatically on every request</h2>
<p id="61e7" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">The Token will be valid until it expires. However, the server can revoke it on demand.</p>
<figure class="yq yr ys yt vy yu rx ry paragraph-image">
<div class="yv yw cu yx ae yy" tabindex="0" role="button">
<div class="rx ry aeh"><img class="ae yz za" role="presentation" src="https://miro.medium.com/max/1050/0*Hx4WMKQFVttozEqZ" alt="" width="700" height="467" loading="lazy"></div>
</div>
<figcaption class="zb jt vo rx ry zc zd bv b bw bx ho" data-selectable-paragraph="">Photo by&nbsp;<a class="ay ot" href="https://unsplash.com/@lindsayhenwood?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Lindsay Henwood</a>&nbsp;on&nbsp;<a class="ay ot" href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral" target="_blank" rel="noopener ugc nofollow">Unsplash</a></figcaption>
</figure>
<h1 id="c883" class="abu abv xh bv ky abw abx aby sw abz aca acb tb tc acc td tg th acd ti tl tm ace tn tq acf by" data-selectable-paragraph="">What's Next</h1>
<p id="5e3c" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">You should know that no solution is a silver bullet, there will always be tradeoffs, and no one method is 100% safe. There will always be vulnerabilities. However, we should make sure we offer the best security possible for our methods.</p>
<p id="d3ef" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">This article went over JWT and its shortcomings as a web auth solution. Then we found a better (secure) way of implementing auth for our web apps.</p>
<p id="6b69" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">However, I showed a straightforward implementation using stateful sessions. You might be wondering, what about expiration? Even one week can be a long expiration window.</p>
<h2 id="7957" class="acq abv xh bv ky ss acr st sw sx acs sy tb zm act acu tg zq acv acw tl zu acx acy tq acz by" data-selectable-paragraph="">Refresh Tokens</h2>
<p id="62f0" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">I did not talk about refresh tokens to keep things simple and this article from becoming any longer, but here is a general idea.</p>
<p id="d2ca" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">You have two tokens: the authentication token, which verifies your identity, and the refresh token.</p>
<p id="d5ff" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Auth tokens can then be short-lived, for example, 1&ndash;2 days. The browser will constantly be checking while the user is actively using their sessions to see if the auth token expires soon. When it detects this, it uses the refresh token, with has a longer-lived expiration, to request a new auth token before the previous one expires.</p>
<p id="725d" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">Long-Lived Refresh tokens introduce new concerns and complexity like token rotation and token reuse checks, but I'll leave that topic for another post.</p>
<h1 id="59fc" class="abu abv xh bv ky abw abx aby sw abz aca acb tb tc acc td tg th acd ti tl tm ace tn tq acf by" data-selectable-paragraph=""><em class="aei">Don't reinvent the wheel if you still want to use Stateless Sessions</em></h1>
<p id="5867" class="pw-post-body-paragraph ze zf xh tr b zg acg yh zi zj ach yk zl zm aci zo zp zq acj zs zt zu ack zw zx zy qq by" data-selectable-paragraph="">Libraries like AWS Cognito or Firebase use stateless tokens and store them in Local Storage.</p>
<p id="d7b1" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">If you still want to use stateless sessions, make sure you use a well-tested and fully functional library that handles security for you.</p>
<p id="e88a" class="pw-post-body-paragraph ze zf xh tr b zg zh yh zi zj zk yk zl zm zn zo zp zq zr zs zt zu zv zw zx zy qq by" data-selectable-paragraph="">These libraries use short-lived tokens, refresh them constantly and offer token refresh rotation to safeguard against security issues.</p>